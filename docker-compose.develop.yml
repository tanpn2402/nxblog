version: '3'

services:

  # nginx
  nxblog.nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: nxblog.nginx
    container_name: nxblog.nginx
    restart: unless-stopped
    networks:
      - internal
    depends_on:
      - nxblog.nx
      - nxblog.strapi
      - nxblog.pgadmin
    links:
      - "nxblog.nx:nxblog.nx"
      - "nxblog.nx.replica1:nxblog.nx.replica1"
      - "nxblog.strapi:nxblog.strapi"
      # - "nxblog.strapi.replica1:nxblog.strapi.replica1"
      - "nxblog.pgadmin:nxblog.pgadmin"
    ports:
      - ${NGINX_PORT}:3666
    volumes:
      - ./nginx/log/:/var/log/nginx/

  # strapi
  nxblog.strapi:
    build:
      context: ./strapi
      dockerfile: Dockerfile
    image: nxblog.strapi
    container_name: nxblog.strapi
    restart: unless-stopped
    ports:
      - ${STRAPI_PORT}:1337
    volumes:
      - ./strapi/.cache:/app/.cache
      - ./strapi/build:/app/build
      - ./strapi/config:/app/config
      - ./strapi/database:/app/database
      - ./strapi/public:/app/public
      - ./strapi/src:/app/src
      - ./strapi/.editorconfig:/app/.editorconfig
      - ./strapi/.env:/app/.env
      - ./strapi/.eslintignore:/app/.eslintignore
      - ./strapi/.eslintrc:/app/.eslintrc
      - ./strapi/.strapi-updater.json:/app/.strapi-updater.json
      - ./strapi/favicon.ico:/app/favicon.ico
    depends_on:
      - nxblog.postgres
    networks:
      - internal
    links:
      - "nxblog.postgres:nxblog.postgres"

  # nextjs
  nxblog.nx:
    build:
      context: ./nextjs
      dockerfile: Dockerfile
    image: nxblog.nx
    container_name: nxblog.nx
    restart: unless-stopped
    # ports:
    #   - ${NEXTJS_PORT}:3000
    volumes:
      # - ./nextjs/.next:/app/.next
      # - ./nextjs/@types:/app/@types
      - ./nextjs/components:/app/components
      - ./nextjs/lib:/app/lib
      - ./nextjs/pages:/app/pages
      - ./nextjs/public:/app/public
      - ./nextjs/services:/app/services
      - ./nextjs/styles:/app/styles
      - ./nextjs/.env.local:/app/.env.local
      - ./nextjs/next-env.d.ts:/app/next-env.d.ts
      - ./nextjs/next.config.js:/app/next.config.js
      - ./nextjs/postcss.config.js:/app/postcss.config.js
      - ./nextjs/tailwind.config.js:/app/tailwind.config.js
      - ./nextjs/tsconfig.json:/app/tsconfig.json
    depends_on:
      - nxblog.strapi
    networks:
      - internal
    links:
      - "nxblog.strapi:nxblog.strapi"

  nxblog.nx.replica1:
    build:
      context: ./nextjs
      dockerfile: Dockerfile
    image: nxblog.nx
    container_name: nxblog.nx.replica1
    restart: unless-stopped
    volumes:
      # - ./nextjs/.next:/app/.next
      # - ./nextjs/@types:/app/@types
      - ./nextjs/components:/app/components
      - ./nextjs/lib:/app/lib
      - ./nextjs/pages:/app/pages
      - ./nextjs/public:/app/public
      - ./nextjs/services:/app/services
      - ./nextjs/styles:/app/styles
      - ./nextjs/.env.local:/app/.env.local
      - ./nextjs/next-env.d.ts:/app/next-env.d.ts
      - ./nextjs/next.config.js:/app/next.config.js
      - ./nextjs/postcss.config.js:/app/postcss.config.js
      - ./nextjs/tailwind.config.js:/app/tailwind.config.js
      - ./nextjs/tsconfig.json:/app/tsconfig.json
    depends_on:
      - nxblog.strapi
    networks:
      - internal
    links:
      - "nxblog.strapi:nxblog.strapi"

  # postgres
  nxblog.postgres:
    image: postgres
    container_name: nxblog.postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./postgres/init/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    networks:
      - internal
    restart: unless-stopped

  # postgres admin
  nxblog.pgadmin:
    container_name: nxblog.pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./postgres/pgadmin:/var/lib/pgadmin
    ports:
      - ${PGADMIN_PORT}:80
    networks:
      - internal
    depends_on:
      - nxblog.postgres
    links:
      - "nxblog.postgres:nxblog.postgres"

  # influxdb: time series database
  nxblog.influxdb:
    image: influxdb:1.8
    container_name: nxblog.influxdb
    restart: unless-stopped
    ports:
      - ${INFLUXDB_PORT}:8086
    networks:
      - internal
    volumes:
      - ./influxdb/data:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
      - INFLUXDB_ADMIN_ENABLED=${INFLUXDB_ADMIN_ENABLED}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER} 
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD} 

  # grafana
  nxblog.grafana:
    image: grafana/grafana-enterprise
    container_name: nxblog.grafana
    restart: unless-stopped
    ports:
      - ${GRAFANA_PORT}:3000
    networks:
      - internal
    volumes:
      - ./grafana/data:/var/lib/grafana
    depends_on:
      - nxblog.influxdb
    links:
      - nxblog.influxdb

  # telegraf
  nxblog.telegraf:
    build:
      context: ./telegraf
      dockerfile: Dockerfile
    image: nxblog.telegraf
    container_name: nxblog.telegraf
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - ./telegraf/telegraf:/app/telegraf
      - ./telegraf/telegraf.conf:/app/telegraf.conf
      - ./telegraf/telegraf.d:/app/telegraf.d
      # for mornitoring docker (https://github.com/influxdata/telegraf/blob/master/plugins/inputs/docker/README.md)
      - /var/run/docker.sock:/var/run/docker.sock
      # for mornitoring nginx
      - ./nginx/log/access.log:/app/access.log
    depends_on:
      - nxblog.influxdb
      - nxblog.nginx
      - nxblog.nx
      - nxblog.strapi
    links:
      - "nxblog.nx:nxblog.nx"
      - "nxblog.strapi:nxblog.strapi"
      - "nxblog.nginx:nxblog.nginx"
      - "nxblog.influxdb:nxblog.influxdb"

networks:
  internal: